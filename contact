//contact.h
//***********************************************************************
#pragma once
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#define NAME_MAX 20
#define SEX_MAX 5
#define TELE_MAX 12
#define ADRR_MAX 30
#define MAX 1000

//描述一个人信息的结构体
struct PeoInfo
{
	char name[NAME_MAX];
	int age;
	char sex[SEX_MAX];
	char tele[TELE_MAX];
	char addr[ADRR_MAX];
};
//通讯录的结构体
struct Contact
{
	struct PeoInfo date[MAX];//存放1000个人的信息
	int sz;//表示通讯录中当前存放的人信息个数
};



//增加一个人的信息
void Addcontact(struct Contact * pc);

//显示信息
void shoeContact(const struct Contact *pc);

//删除信息
void delContact(struct Contact *pc);

//查找信息
void seaContact(const struct Contact *pc);

//修改信息
void modifyContact(struct Contact *pc);

//********************************* contact.c  **************************************
#include "contact.h"

void Addcontact(struct Contact* pc)
{
	if (MAX == pc->sz)
		printf("通讯录已满,无法添加\n");
	else
	{
		printf("input name:");
		scanf("%s",pc->date[pc->sz].name);
		printf("intput age:");
		scanf("%d",&pc->date[pc->sz].age);
		printf("input sex:");
		scanf("%s",pc->date[pc->sz].sex);
		printf("input telephone:");
		scanf("%s",pc->date[pc->sz].tele);
		printf("input address:");
		scanf("%s",pc->date[pc->sz].addr);

		pc->sz++;
		printf("添加成功!\n");
	}
}

//显示信息
void showContact(const struct Contact* pc)
{
	if (0 == pc->sz)
		printf("通讯录为空!");
	else
	{
		printf("名字\t年龄\t性别\t电话\t地址\n");
		int i = 0;
		for (i = 0; i < pc->sz; i++)
			printf("%s\t %d\t %s\t  %s\t%s\n",
				pc->date[i].name,
				pc->date[i].age,
				pc->date[i].sex,
				pc->date[i].tele,
				pc->date[i].addr
			);
	}
}

//查找联系人
static int find_name(struct Contact * pc, char * name)
{
	int i = 0;
	for ( i = 0; i < pc->sz; i++)
	{
		if (0 == strcmp(pc->date[i].name, name))
			return i;//找到时下表位置;
	}
	//没找到
	return -1;
}


//删除信息
void delContact( struct Contact* pc)
{
	
	if (0 == pc->sz)
		printf("通讯录为空,无法删除!\n");
	else
	{
		//1.找到要删除的人
		char name[NAME_MAX];
		printf("请输入你要删除人的名字:");
		scanf("%s",name);
		int pos = find_name(pc, name);
		if (-1 == pos)
			printf("你要删除的人不存在:");
		else
		{
			//2.删除		
			int j = 0;
			for (j = pos; j < pc->sz - 1; j++)
			{
				pc->date[pos] = pc->date[pos + 1];
			}

			pc->sz--;
			printf("删除成功!");
		} 
	}
}

//查找信息
void seaContact(const struct Contact* pc)
{
	char name[NAME_MAX];
	printf("please input search name:");
	scanf("%s",name);
	int pos = find_name(pc, name);
	if (-1 == pos)
	{
		printf("要查找的人不存在!");
	}
	else
	{
		printf("名字\t年龄\t性别\t电话\t地址\n");
		int i = 0;
		for (i = 0; i < pc->sz; i++)
			printf("%s\t %d\t %s\t  %s\t%s\n",
				pc->date[pos].name,
				pc->date[pos].age,
				pc->date[pos].sex,
				pc->date[pos].tele,
				pc->date[pos].addr);
		
	}
}

//修改信息
void modifyContact(struct Contact* pc)
{
	char name[NAME_MAX];
	printf("请输入你要修改的名字:");
	scanf("%s",name);
	int pos = find_name(pc, name);
	if (-1 == pos)
		printf("查无此人!");
	else
	{
		printf("%s\t %d\t %s\t  %s\t%s\n",
			pc->date[pos].name,
			pc->date[pos].age,
			pc->date[pos].sex,
			pc->date[pos].tele,
			pc->date[pos].addr);
		printf("修改成功!");
	}
}

//****************************  test.c  *************************
/*写一个通讯录
* 可以保存1000人的信息
* 每个人的信息：
* 名字、年龄、性别、电话、地址
* 功能：
* 1、增加一个人的信息
* 2、删除一个人的信息
* 3、查找一个人的信息
* 4、修改一个人的信息
* 5、显示通讯录中所有人的信息
* 6、排序
* 0、退出
*/

#include "contact.h"

void menu()//菜单
{
	printf("*********************************\n");
	printf("*****  1、add      2、del    *****\n");	
	printf("*****  3、srarch   4、modify *****\n");
	printf("*****  5、show     6、sort   ******\n");
	printf("*****  0、exit               ******\n");
	printf("***********************************\n");

}

enum Option
{
	EXIT,ADD,DEL,SEARCH,MODIFY,SHOW,SORT
};

void InitContact(struct Contact* pc)
{
	pc->sz = 0;
	memset(pc->date, 0, sizeof(pc->date));
}

int main()
{
	struct Contact con;
	InitContact(&con);
	int input = 0;
	do
	{
		menu();
		printf("please choice:>");
		scanf("%d",&input);
		switch (input)
		{
		case ADD:
			Addcontact(&con);
			break;
		case DEL:
			delContact(&con);
			break;
		case SEARCH:
			seaContact(&con);
			break;
		case MODIFY:
			modifyContact(&con);
			break;
		case SHOW:
			showContact(&con);
			break;
		case SORT:
			break;
		case EXIT:
			printf("退出通讯录：\n");
			break;
		default:
			printf("选择错误，请重新选择：\n");
			break;
		}

	} while (input);
	return 0;
}
